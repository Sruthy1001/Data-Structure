#include <stdio.h>
#define MAX_SIZE 100
void unionSets(int set1[], int set2[], int result[], int size) {
for (int i = 0; i < size; ++i) {
result[i] = set1[i] | set2[i];
}
}
void intersectionSets(int set1[], int set2[], int result[], int size) {
for (int i = 0; i < size; ++i) {
result[i] = set1[i] & set2[i];
}
}
void differenceSets(int set1[], int set2[], int result[], int size) {
for (int i = 0; i < size; ++i) {
result[i] = set1[i] & ~set2[i];
}
}
void displaySet(int set[], int size) {
printf("{ ");
for (int i = 0; i < size; ++i) {
for (int j = 0; j < 32; ++j) {
if (set[i] & (1 << j)) {
printf("%d ", i * 32 + j);
}
}
}
printf("}\n");
}
int main() {
int size, set1[MAX_SIZE], set2[MAX_SIZE], result[MAX_SIZE];
printf("Enter the size of the sets: ");
scanf("%d", &size);
printf("Enter elements for the first set:\n");
for (int i = 0; i < size; ++i) {
set1[i] = 0;
int element;
do {
printf("Enter element (or -1 to stop): ");
scanf("%d", &element);
         if (element != -1) {
set1[i] |= (1 << element);
}
} while (element != -1);
}
printf("Enter elements for the second set:\n");
for (int i = 0; i < size; ++i) {
set2[i] = 0;
int element;
do {
printf("Enter element (or -1 to stop): ");
scanf("%d", &element);
if (element != -1) {
set2[i] |= (1 << element);
}	
} while (element != -1);
}
unionSets(set1, set2, result, size);
printf("Union of the sets: ");
displaySet(result, size);
intersectionSets(set1, set2, result, size);
printf("Intersection of the sets: ");
displaySet(result, size);
differenceSets(set1, set2, result, size);
printf("Difference of the sets (set1 - set2): ");
displaySet(result, size);
return 0;
}
